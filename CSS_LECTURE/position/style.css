/* ***************
1. static
- 모든 박스 요소가 만들어지면 기본적으로 가지는 디폴트 position 속성이다.
- 만들어진 위치가 정 위치이고 left, top과 같은 위치이동 속성 적용이 안된다.
2. relative
- 만들어진 위치가 정위치이나 left, top 등을 사용해서 위치이동을 할 수 있다.
- 위치 이동시 기준점(왼쪽 위 꼭지점)은 처음 만들어진 위치다.
3. absolute
- 독립적으로는 거의 사용하지 않고 어떤 요소의 자식으로 있을때 주로 사용된다.
- 특징은 static이 아닌 부모를 기준으로 그 부모 내부룰 기준으로 위치 이동이 가능하다. (단 마이너스 값을 적용할 경우 부모의 반경을 넘을 수는 있다.)
4. fixed
- 만들어지는 위치는 static과 동일하지만 위치 이동 시 기준점은 부모를 무시하고 브라우저를 기준으로 한다. 
******************/

*{margin: 0; padding: 0;}

div{
    width: 200px;
    height: 200px;
    border: 1px solid #888;
}

div.static{
    background: yellow;
    left: 100px; /* 위치이동 안됨*/
}

div.relative{
    background: blue;
    position: relative;
    left: 100px;
    bottom: 100px;
    /* 위치이동의 기준은 왼쪽 위 꼭지점 */
    /* 레이아웃 단위에서 사용되는 요소는 static이 가장 안정적이므로 가급적 static을 사용하되, 
    해당 요소의 자식이 미세하게 위치 조정이 필요할 경우 relative를 사용하고, 자식에게 absoulute를 사용한다 */
}

div.wrap{
    background: green;
    position: relative;
    width: 200px;
}

p.absoulute{
    width: 80px;
    height: 80px;
    border: 1px solid #888;
    background: red;
    position: absolute;
    _left:50%;
    _margin-left: -50px;
    /* absoulute를 적용 할 경우 부모의 포지션이 static이 아니면 부모의 내부에서 움직인다
    요소를 중앙으로 보내려 할때는 left를 50%로 옮기고, 요소크기의 반만큼 margin-left값을 밀어준다 */
    z-index: 1;
}

p.another{
    width: 80px;
    height: 80px;
    background: yellow;
    top: 40px;
    left: 40px;
    position: absolute;
    z-index: 2;
}

div.fixed{
    background: mediumaquamarine;
    position: fixed;
    right: 0;
    top: 0;
}

div.fixed-ex{ 
    background: maroon;
    position: absolute;
    right: 0;
    /* absoulute요소가 body를 부모로 잡을 경우 fixed와 마찬가지로 브라우저를 기준으롤 위치이동 한다. 
    하지만 fixed와 다른 점은 fixed는 항상 같은 위치를 잡고 있지만, absoulte는 스크롤에 영향 없이 위치를 잡는다 */
}

body{height: 2000px;}